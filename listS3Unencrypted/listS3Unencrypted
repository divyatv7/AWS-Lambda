import botocore
import boto3
from botocore.exceptions import ClientError
import os, os.path, sys

s3_client = boto3.client('s3')
s3 = boto3.resource('s3')

def getBucketList():
    return s3_client.list_buckets()
    
def detailedNotifier(s3List):
    # sends a list of unencrypted S3 buckets to the SNS topic
    sns = boto3.client('sns')
    message = s3List
    try:
        sns.publish(
            TopicArn=os.environ["SNS_ARN"],
            Subject="List of un-encrypted S3 Buckets in awsdne0",
            Message=message
        )
    except ClientError as err:
        print(err)    
    
def lambda_handler(event, context):
    bucketNames = []
    unencrypted = ""
    response = getBucketList()
    buckets = response['Buckets']
    for bucket in buckets:
        bucketNames.append(bucket['Name'])
    for bucket in bucketNames:
        try:
            s3_client.get_bucket_encryption(Bucket=bucket)
        except botocore.exceptions.ClientError as err:
            unencrypted += bucket + ".\n"
    unencrypted += "\n\n This message is generated by list-s3-unencrypted Lambda function, incase of any issues please reach out to 'Storage Engineering'"        
    print(unencrypted)
    
    if(os.environ["DETAILED_NOTIFICATIONS"].upper() == "TRUE"):
        try:
            detailedNotifier(unencrypted)
        except ClientError as err:
            print(err)
